<%args>
  $subscribed
  $basic
  %backups
  $modulesChanged
</%args>
<%init>
use EBox::Gettext;
</%init>
% if (not $subscribed) {
<& /remoteservices/NoActive.mas &>
% return;
% }
<& .backupSection, modulesChanged => $modulesChanged,
                   basic => $basic,
                   backups => \%backups
&>
<& .listSection, backups => \%backups &>

<%def .backupSection>
<%args>
$modulesChanged
$basic
%backups
</%args>
<%init>
my ($lastBackup) = (values %backups);
my $restricted = ($basic and $lastBackup);
my $formAction = $restricted ? 'Confirm' : 'MakeRemoteBackup';

my @formElements;

if ($restricted) {
    push @formElements, [
                         name => 'newName',
                         id => 'backup_name',
                         printableName => __('Name'),
                        ];

} else {
    push @formElements, [
                         name => 'name',
                         id => 'backup_name',
                         printableName => __('Name'),
                        ];
}

my $backupTitle = __('Remote Backup');
my $backupOnClickJs =<< "ENDJS" ;
     var name= \$('backup_name').value;
     var description= \$('backup_description').value;
     var title = '$backupTitle: ' + description;
     var url = '/RemoteServices/Backup/MakeRemoteBackup?';
     url += 'name=' + name;
     url += '&description=' + description;
     url += '&backup=1&popup=1';

     Modalbox.show(url, {title: title, transitions: false});
     return false
ENDJS

push @formElements, (

                 [
                  name => 'description',
                  id => 'backup_description',
                  printableName => __('Description'),
                 ],
                 [
                  input => 'submit',
                  name  => 'backup',
                  value => __('Back up'),
                  onclick => $backupOnClickJs,
                  $modulesChanged ? (disabled => 'disabled') : (),
                 ]

);

if ($restricted) {
    my $lastBackupName = $lastBackup->{Filename};
    push @formElements, (
                         # name of the already-done backup
                         [
                          input => 'hidden',
                          name => 'name',
                          value => $lastBackupName,
                         ],
                         # action to confirm
                         [
                          input => 'hidden',
                          name => 'action',
                          value => 'overwrite',
                         ],
                        );
}


</%init>
<h3><% __('Back up the current configuration state') %></h3>
<div class='help'>

</div>
% if ($modulesChanged) {
  <div class='warning'>
	<% __(q{Backup is disabled because there are unsaved configuration changes. Please, save or discard them to be able to backup the configuration}) %>
  </div>
% }

% if ($restricted) {
  <div class='warning'>
	<% __(q{Please note that the Basic Subscription allows you to store only one remote configuration backup. If you make a new configuration backup, the previous backup will be overwritten.}) %>
  </div>
% }

<p>
<table class='formTable'>
    <tbody>
        <form action='<% $formAction %>' method='POST'>
             <& /formTable.mas, rows => \@formElements &>
        </form>
    </tbody>
</table>
</p>
</%def>



<%def .listSection>
<%args>
%backups
</%args>
<%init>

my @columnTitles = (
                    __('Name'),
                    __('Date'),
                    __('Description'),
                    __('Archive size'),
                    __('Actions'),
                   );

my $downloadImg  = "/data/images/down.gif";
my $applyImg = "/data/images/apply.gif";
my $deleteImg = "/data/images/delete.gif";


my $restoreTitle = __('Restore configuration backup');
my $downloadTitle = __('Download configuration backup');
my $deleteTitle = __('Delete configuration backup');

my @rows = map {
             my @row;
             my $name =  $_->{Filename};
             push @row, ( $name, $_->{Date}, $_->{Comment}, $_->{printableSize});

             my $restoreUrl = "Confirm?action=restore&name=$name&popup=1";
             my $downloadUrl = "DownloadRemoteBackup?name=$name";
             my $deleteUrl = "Confirm?action=delete&name=$name&popup=1";

             # action element
             push @row, [
                         {
                          name => __('Restore'),
                          icon => $applyImg,
                          text => $restoreTitle,
                          onclick => "Modalbox.show('$restoreUrl',  {title:'$restoreTitle', transitions: false}); return false",
                         },

                         {
                          name => __('Download'),
                          icon => $downloadImg,
                          text => $downloadTitle,
                          url => $downloadUrl,
                         },
                         {
                          name => __('Delete'),
                          icon => $deleteImg,
                          text => $deleteTitle,
                          onclick => "Modalbox.show('$deleteUrl',  {title:'$deleteTitle', transitions: false}); return false",
                         },

                        ];

             [@row]

          } sort { $b->{sortableDate} <=> $a->{sortableDate} } values %backups;

my @legendElements = (
                      {
                       imgFile => $applyImg,
                       imgName => __('restore') ,
                      },
                      {
                       imgFile => $downloadImg,
                       imgName => __('download'),
                      },
                      {
                       imgFile => $deleteImg,
                       imgName => __('delete')
                      },
                     );
</%init>
% if (keys %backups) {
<h3><% __("Configuration backups' list") %></h3>
<& /dataTable.mas, rows => \@rows, columnTitles => \@columnTitles &>
<br />

<& /legendTable.mas, elements => \@legendElements, nColumns => 3 &>
% }
</%def>

